"use strict";(self.webpackChunkexb_client=self.webpackChunkexb_client||[]).push([[6429],{96429:(e,t,n)=>{n.r(t),n.d(t,{GetCentroid:()=>l});var r=n(11438),a=n(8294),i=n(18886);function c(e){if(null==e)return null;switch(e.type){case"extent":return function(e){return new a.default({x:(e.xmax+e.xmin)/2,y:(e.ymax+e.ymin)/2,spatialReference:e.spatialReference})}(e);case"point":return e;case"polygon":return function(e){if(null!=(e=e.centroid))return e}(e);case"polyline":return function(e){var t=e.paths;if(!(t.length<1)){let c=0,l=0,f=0,o=0;for(const e of t){let t,a;for(const s of e){var n=s[0];void 0!==t&&(c+=(n+t)*(r=Math.abs(n-t))/2,f+=r);var r,i=s[1];void 0!==a&&(l+=(i+a)*(r=Math.abs(i-a))/2,o+=r),t=n,a=i}}return new a.default({x:c/f,y:l/o,spatialReference:e.spatialReference})}}(e);case"multipoint":return function(e){var t=e.points;if(!(t.length<1)){let n=0,r=0;for(const e of t)n+=e[0],r+=e[1];return new a.default({x:n/t.length,y:r/t.length,spatialReference:e.spatialReference})}}(e)}}class l{execute(e,t){if(1<(e=i.U.array("geometry",e.geometry,i.U.never)).length){const t=new r.default;for(const r of e){var n=c(r);null!=n&&(t.addPoint(c(n)),t.spatialReference=r.spatialReference||t.spatialReference)}return{centroid:c(t)}}return{centroid:c(e[0])}}}l.action="gcx:wf:arcgis::GetCentroid",l.suite="gcx:wf:builtin"}}]);