"use strict";(self.webpackChunkexb_client=self.webpackChunkexb_client||[]).push([[886],{60886:(e,t,a)=>{a.r(t),a.d(t,{GenerateWebmapForReport:()=>l});var n,r=a(68230),i=a(56655),s=a(8558),o=a(18886),c=a(67411);let l=n=class{async execute(e,t,a){var n=o.U.string("mapName",e.mapName,o.U.never),r=o.U.number("scale",e.scale,void 0);if(r<=0)throw new i.aM("scale","Scale must be greater than zero.");const s=a.create();if(await s.load(),!s.map)throw new i.ls("No map available. Unable to generate webmap parameters.");return a=r||s.getScale(),e=e.extent||s.getExtent(),t=await this.getWebmap(s,a,t.ambient.trivia),{result:{extent:await this.getWgs84Extent(e),mapName:n,scale:r||0,webmap:t}}}async getWebmap(e,t,a){throw console.warn("getWebmap needs to be overridden by a client implementation."),new i.qN(n.action)}async getWgs84Extent(e){throw console.warn("getWgs84Extent needs to be overridden by a client implementation."),new i.qN(n.action)}};l.action="gcx:wf:geocortex::GenerateWebmapForReport",l.suite="gcx:wf:builtin",l=n=(0,r.gn)([(0,s.QZ)(c.I)],l)}}]);