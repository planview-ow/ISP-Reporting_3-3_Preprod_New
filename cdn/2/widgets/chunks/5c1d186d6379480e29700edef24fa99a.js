"use strict";(self.webpackChunkexb_client=self.webpackChunkexb_client||[]).push([[445],{90445:(e,i,r)=>{r.r(i),r.d(i,{ServiceAreaTask:()=>u});var t=r(68230),o=r(47130),s=r(27387),n=r(35109),a=r(76780),l=r(68457);let u=class{async execute(e,i,t){var o=s.U.string("url",e.url,s.U.never);if(!n.SH)return this.execute_tasksApi(o,e,i,t);const a=new(0,(await Promise.resolve().then(r.bind(r,48920))).default);return a.facilities=s.U.exists("facilities",e.facilities),a.accumulateAttributes=s.U.array("accumulateAttributes",e.accumulateAttributes),a.attributeParameterValues=s.U.exists("attributeParameterValues",e.attributeParameterValues,void 0),a.defaultBreaks=s.U.exists("defaultBreaks",e.defaultBreaks,void 0),a.excludeSourcesFromPolygons=s.U.exists("excludeSourcesFromPolygons",e.excludeSourcesFromPolygons,void 0),a.impedanceAttribute=s.U.string("impedanceAttribute",e.impedanceAttribute,void 0),a.impedanceAttribute||(a.impedanceAttribute=s.U.string("impedenceAttribute",e.impedenceAttribute,void 0)),a.mergeSimilarPolygonRanges=s.U.boolean("mergeSimilarPolygonRanges",e.mergeSimilarPolygonRanges,void 0),a.outputGeometryPrecision=s.U.number("outputGeometryPrecision",e.outputGeometryPrecision,void 0),a.outputGeometryPrecisionUnits=s.U.string("outputGeometryPrecisionUnits",e.outputGeometryPrecisionUnits,void 0),a.outputLines=s.U.string("outputLines",e.outputLines,void 0),a.outputPolygons=s.U.string("outputPolygons",e.outputPolygons,void 0),a.overlapLines=s.U.boolean("overlapLines",e.overlapLines,void 0),a.overlapPolygons=s.U.boolean("overlapPolygons",e.overlapPolygons,void 0),a.pointBarriers=s.U.exists("pointBarriers",e.pointBarriers,void 0),a.polygonBarriers=s.U.exists("polygonBarriers",e.polygonBarriers,void 0),a.polylineBarriers=s.U.exists("polylineBarriers",e.polylineBarriers,void 0),a.restrictionAttributes=s.U.exists("restrictionAttributes",e.restrictionAttributes,void 0),a.restrictUTurns=s.U.string("restrictUTurns",e.restrictUTurns,void 0),a.returnFacilities=s.U.boolean("returnFacilities",e.returnFacilities,void 0),a.returnPointBarriers=s.U.boolean("returnPointBarriers",e.returnPointBarriers,void 0),a.returnPolygonBarriers=s.U.boolean("returnPolygonBarriers",e.returnPolygonBarriers,void 0),a.returnPolylineBarriers=s.U.boolean("returnPolylineBarriers",e.returnPolylineBarriers,void 0),a.splitLinesAtBreaks=s.U.boolean("splitLinesAtBreaks",e.splitLinesAtBreaks,void 0),a.splitPolygonsAtBreaks=s.U.boolean("splitPolygonsAtBreaks",e.splitPolygonsAtBreaks,void 0),a.timeOfDay=s.U.exists("timeOfDay",e.timeOfDay,void 0),a.travelDirection=s.U.string("travelDirection",e.travelDirection,void 0),a.trimOuterPolygon=s.U.boolean("trimOuterPolygon",e.trimOuterPolygon,void 0),a.trimPolygonDistance=s.U.number("trimPolygonDistance",e.trimPolygonDistance,void 0),a.trimPolygonDistanceUnits=s.U.string("trimPolygonDistanceUnits",e.trimPolygonDistanceUnits,void 0),a.useHierarchy=s.U.boolean("useHierarchy",e.useHierarchy,void 0),e=s.U.exists("outSpatialReference",e.outSpatialReference,void 0),a.outSpatialReference=t.getOutSR(e),e=(0,(await Promise.resolve().then(r.bind(r,38127))).default.solve)(o,a,e={signal:i.cancellationToken.signal}),(0,l.Iz)(i,e),{facilities:(e=await e).facilities,messages:e.messages,pointBarriers:e.pointBarriers,polygonBarriers:e.polygonBarriers,polylineBarriers:e.polylineBarriers,serviceAreaPolygons:e.serviceAreaPolygons,serviceAreaPolylines:e.serviceAreaPolylines}}async execute_tasksApi(e,i,t,o){const n=new(0,(await r.e(3889).then(r.t.bind(r,63889,23))).ServiceAreaParameters);n.facilities=s.U.exists("facilities",i.facilities),n.accumulateAttributes=s.U.array("accumulateAttributes",i.accumulateAttributes),n.attributeParameterValues=s.U.exists("attributeParameterValues",i.attributeParameterValues,void 0),n.defaultBreaks=s.U.exists("defaultBreaks",i.defaultBreaks,void 0),n.doNotLocateOnRestrictedElements=s.U.boolean("doNotLocateOnRestrictedElements",i.doNotLocateOnRestrictedElements,void 0),n.excludeSourcesFromPolygons=s.U.exists("excludeSourcesFromPolygons",i.excludeSourcesFromPolygons,void 0),n.impedanceAttribute=s.U.string("impedanceAttribute",i.impedanceAttribute,void 0),n.impedanceAttribute||(n.impedanceAttribute=s.U.string("impedenceAttribute",i.impedenceAttribute,void 0)),n.mergeSimilarPolygonRanges=s.U.boolean("mergeSimilarPolygonRanges",i.mergeSimilarPolygonRanges,void 0),n.outputGeometryPrecision=s.U.number("outputGeometryPrecision",i.outputGeometryPrecision,void 0),n.outputGeometryPrecisionUnits=s.U.string("outputGeometryPrecisionUnits",i.outputGeometryPrecisionUnits,void 0),n.outputLines=s.U.string("outputLines",i.outputLines,void 0),n.outputPolygons=s.U.string("outputPolygons",i.outputPolygons,void 0),n.overlapLines=s.U.boolean("overlapLines",i.overlapLines,void 0),n.overlapPolygons=s.U.boolean("overlapPolygons",i.overlapPolygons,void 0),n.pointBarriers=s.U.exists("pointBarriers",i.pointBarriers,void 0),n.polygonBarriers=s.U.exists("polygonBarriers",i.polygonBarriers,void 0),n.polylineBarriers=s.U.exists("polylineBarriers",i.polylineBarriers,void 0),n.restrictionAttributes=s.U.exists("restrictionAttributes",i.restrictionAttributes,void 0),n.restrictUTurns=s.U.string("restrictUTurns",i.restrictUTurns,void 0),n.returnFacilities=s.U.boolean("returnFacilities",i.returnFacilities,void 0),n.returnPointBarriers=s.U.boolean("returnPointBarriers",i.returnPointBarriers,void 0),n.returnPolygonBarriers=s.U.boolean("returnPolygonBarriers",i.returnPolygonBarriers,void 0),n.returnPolylineBarriers=s.U.boolean("returnPolylineBarriers",i.returnPolylineBarriers,void 0),n.splitLinesAtBreaks=s.U.boolean("splitLinesAtBreaks",i.splitLinesAtBreaks,void 0),n.splitPolygonsAtBreaks=s.U.boolean("splitPolygonsAtBreaks",i.splitPolygonsAtBreaks,void 0),n.timeOfDay=s.U.exists("timeOfDay",i.timeOfDay,void 0),n.travelDirection=s.U.string("travelDirection",i.travelDirection,void 0),n.trimOuterPolygon=s.U.boolean("trimOuterPolygon",i.trimOuterPolygon,void 0),n.trimPolygonDistance=s.U.number("trimPolygonDistance",i.trimPolygonDistance,void 0),n.trimPolygonDistanceUnits=s.U.string("trimPolygonDistanceUnits",i.trimPolygonDistanceUnits,void 0),n.useHierarchy=s.U.boolean("useHierarchy",i.useHierarchy,void 0),i=s.U.exists("outSpatialReference",i.outSpatialReference,void 0),n.outSpatialReference=o.getOutSR(i);const a=new(0,(await r.e(3889).then(r.t.bind(r,63889,23))).default)(e);return e=(0,l.Rw)(t.cancellationToken)?{signal:t.cancellationToken.signal}:void 0,e=a.solve(n,e),(0,l.Iz)(t,e),(0,l.Qo)(e,(function(e){return{facilities:e.facilities,messages:e.messages,pointBarriers:e.pointBarriers,polygonBarriers:e.polygonBarriers,polylineBarriers:e.polylineBarriers,serviceAreaPolygons:e.serviceAreaPolygons,serviceAreaPolylines:e.serviceAreaPolylines}}))}};u.action="gcx:wf:arcgis::ServiceAreaTask",u.suite="gcx:wf:builtin",u=(0,t.gn)([(0,o.QZ)(a.I)],u)}}]);