(self.webpackChunkexb_client=self.webpackChunkexb_client||[]).push([[4526,3889],{4526:(t,e,i)=>{"use strict";i.r(e),i.d(e,{QueryTask:()=>d});var s,a=i(68230),r=i(47130),o=i(27387),n=i(35109),u=i(76780),l=i(63889),c=i(68457);let d=s=class{static getToJSONFunctionName(){return n.gu?"toJson":"toJSON"}static isToJSONMissing(t){return"object"==typeof t&&"function"!=typeof t[s.getToJSONFunctionName()]}static isLayerMapSource(t){return"mapLayer"===t.type}static addToJSON(t){if(n.gu){let e;return e=new(s.isLayerMapSource(t)?l.LayerMapSource:l.LayerDataSource)(t),e}{let e;const i=s.getToJSONFunctionName();e=s.isLayerMapSource(t)?function(){return{type:this.type,mapLayerId:this.mapLayerId,gdbVersion:this.gdbVersion}}:function(){return{type:this.type,dataSource:this.dataSource&&"function"==typeof this.dataSource[i]?this.dataSource[i]():this.dataSource}},t[i]=e}return t}async execute(t,e,s){if(!n.SH)return this.execute_tasksApi(t,e,s);var a=o.U.urlOrLayer(t,!1);const r=new(0,(await Promise.resolve().then(i.bind(i,37902))).default);r.distance=o.U.number("distance",t.distance,void 0),r.geometry=o.U.exists("geometry",t.geometry,void 0),r.geometryPrecision=o.U.exists("geometryPrecision",t.geometryPrecision,void 0),r.groupByFieldsForStatistics=o.U.array("groupByFieldsForStatistics",t.groupByFieldsForStatistics,void 0),r.maxAllowableOffset=o.U.number("maxAllowableOffset",t.maxAllowableOffset,void 0),r.multipatchOption=o.U.string("multipatchOption",t.multipatchOption,void 0),r.num=o.U.number("count",t.count,void 0),r.objectIds=o.U.array("ids",t.ids,void 0),r.orderByFields=o.U.array("orderByFields",t.orderByFields,void 0),r.outFields=o.U.array("outFields",t.outFields,void 0);var u=o.U.exists("outSpatialReference",t.outSpatialReference,void 0);r.outSpatialReference=s.getOutSR(u);const l=(await Promise.resolve().then(i.bind(i,56472))).default;if(u=o.U.array("outStatistics",t.outStatistics,void 0)){r.outStatistics=[];for(const t of u){const e=new l;e.onStatisticField=t.onStatisticField,e.outStatisticFieldName=t.outStatisticFieldName,e.statisticType=t.statisticType,r.outStatistics.push(e)}}r.pixelSize=o.U.exists("pixelSize",t.pixelSize,void 0),r.quantizationParameters=o.U.exists("quantizationParameters",t.quantizationParameters,void 0),r.returnDistinctValues=o.U.boolean("returnDistinctValues",t.returnDistinctValues,!1),r.returnGeometry=o.U.boolean("returnGeometry",t.returnGeometry,!1);const c=o.U.string("spatialRelationship",t.spatialRelationship,void 0);void 0!==c&&(c.match(/^[TF012\*]{9}$/)?(r.spatialRelationship="relation",r.relationParameter=c):r.spatialRelationship=c),r.start=o.U.number("start",t.start,void 0),r.text=o.U.string("text",t.text,void 0),r.where=o.U.string("where",t.where,void 0),e={signal:e.cancellationToken.signal};const d=(await Promise.resolve().then(i.bind(i,23853))).default.executeQueryJSON;return{feature:(e=await d(a,r,e)).features[0],features:e.features,results:e}}async execute_tasksApi(t,e,a){var r=o.U.urlOrLayer(t,n.gu),u=o.U.string("gdbVersion",t.gdbVersion,void 0);let l=o.U.exists("source",t.source,void 0);const d=(await Promise.resolve().then(i.t.bind(i,63889,23))).default,p=new(0,(await Promise.resolve().then(i.t.bind(i,63889,23))).Query);s.isToJSONMissing(l)&&(l=s.addToJSON(l)),p.distance=o.U.number("distance",t.distance,void 0),p.geometry=o.U.exists("geometry",t.geometry,void 0),p.geometryPrecision=o.U.exists("geometryPrecision",t.geometryPrecision,void 0),p.groupByFieldsForStatistics=o.U.array("groupByFieldsForStatistics",t.groupByFieldsForStatistics,void 0),p.maxAllowableOffset=o.U.number("maxAllowableOffset",t.maxAllowableOffset,void 0),p.multipatchOption=o.U.string("multipatchOption",t.multipatchOption,void 0),p.start=o.U.number("start",t.start,void 0),p.num=o.U.number("count",t.count,void 0),p.objectIds=o.U.array("ids",t.ids,void 0),p.orderByFields=o.U.array("orderByFields",t.orderByFields,void 0),p.outFields=o.U.array("outFields",t.outFields,void 0);const y=(await Promise.resolve().then(i.t.bind(i,63889,23))).default.StatisticDefinition;var S=o.U.array("outStatistics",t.outStatistics,void 0);if(S){p.outStatistics=[];for(const t of S){const e=new y;e.onStatisticField=t.onStatisticField,e.outStatisticFieldName=t.outStatisticFieldName,e.statisticType=t.statisticType,p.outStatistics.push(e)}}p.pixelSize=o.U.exists("pixelSize",t.pixelSize,void 0),p.quantizationParameters=o.U.exists("quantizationParameters",t.quantizationParameters,void 0),p.returnGeometry=o.U.boolean("returnGeometry",t.returnGeometry,!1),p.returnDistinctValues=o.U.boolean("returnDistinctValues",t.returnDistinctValues,!1),p.text=o.U.string("text",t.text,void 0),p.where=o.U.string("where",t.where,void 0);const m=o.U.string("spatialRelationship",t.spatialRelationship,void 0);void 0!==m&&(m.match(/^[TF012\*]{9}$/)?(p.spatialRelationship="esriSpatialRelRelation",p.relationParam=m):p.spatialRelationship=this.getEsriSpatialRelationship(m)),t=o.U.exists("outSpatialReference",t.outSpatialReference,void 0),p.outSpatialReference=a.getOutSR(t);const v=new d(r,{gdbVersion:u,source:l});return u=(0,c.Rw)(e.cancellationToken)?{signal:e.cancellationToken.signal}:void 0,u=v.execute(p,u),(0,c.Iz)(e,u),(0,c.Qo)(u,(function(t){return{feature:t.features[0],features:t.features,results:t}}))}getEsriSpatialRelationship(t){switch(t){case"contains":return"esriSpatialRelContains";case"crosses":return"esriSpatialRelCrosses";case"intersects":return"esriSpatialRelIntersects";case"envelope-intersects":return"esriSpatialRelEnvelopeIntersects";case"index-intersects":return"esriSpatialRelIndexIntersects";case"overlaps":return"esriSpatialRelOverlaps";case"touches":return"esriSpatialRelTouches";case"within":return"esriSpatialRelWithin";default:return t}}};d.action="gcx:wf:arcgis:query:QueryTask",d.suite="gcx:wf:builtin",d=s=(0,a.gn)([(0,r.QZ)(u.I)],d)},63889:()=>{}}]);