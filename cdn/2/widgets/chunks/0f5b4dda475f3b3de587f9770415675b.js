"use strict";(self.webpackChunkexb_client=self.webpackChunkexb_client||[]).push([[5770],{15770:(t,e,n)=>{n.r(e),n.d(e,{UpdateAttachment:()=>d});var a=n(68831),r=n(56655),o=n(18886),c=n(46275);class d{execute(t,e){var n=o.U.urlOrLayer(t).trim(),d=o.U.number("objectId",t.objectId,o.U.never);const u=o.U.number("attachmentId",t.attachmentId,o.U.never);var i=o.U.exists("attachment",t.attachment,o.U.never),s=o.U.string("gdbVersion",t.gdbVersion),m=o.U.boolean("returnEditMoment",t.returnEditMoment,!1),p=o.U.number("uploadId",t.uploadId),l=o.U.number("timeout",t.timeout);d=(0,c._A)(n,`${d}/updateAttachment`);let h=o.U.string("attachmentName",t.attachmentName,"").trim();""===h&&(h=void 0);const b=new FormData;b.append("f","json"),b.append("attachmentId",u.toString()),b.append("attachment",i,h),s&&b.append("gdbVersion",s),b.append("returnEditMoment",m?"true":"false"),null!=p&&b.append("uploadId",p?"true":"false");const U={method:"post",body:b,responseType:"json",timeout:l,cacheBust:!1};return(0,c.Rw)(e.cancellationToken)&&(U.signal=e.cancellationToken.signal),d=(0,a.default)(d,U).then((t=>t.data)),(0,c.Iz)(e,d),(0,c.Qo)(d,(function(t){if(!(t=t.updateAttachmentResult))throw new r.ls('Error running the "Update Attachment" activity. The response did not include the required "updateAttachmentResult" property.');return{result:t}}))}}d.action="gcx:wf:arcgis::UpdateAttachment",d.suite="gcx:wf:builtin"}}]);