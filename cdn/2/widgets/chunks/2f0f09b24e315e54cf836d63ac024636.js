"use strict";(self.webpackChunkexb_client=self.webpackChunkexb_client||[]).push([[3989],{93989:(e,t,s)=>{s.r(t),s.d(t,{RemoveFeatureSetFields:()=>u});var i=s(27387),l=s(35109),f=s(94981),r=s(68457);function n(e,t){const s=e.attributes;for(const e of t)delete s[e];l.gu?e.setAttributes(s):e.attributes=s}class u{execute(e){const t=(0,r.ZZ)(i.U.exists("features",e.features)),s=i.U.array("fields",e.fields,[]);var l,u=i.U.boolean("removeEmptyFields",e.removeEmptyFields,!1);const a=0<t.length?t[0].attributes:{},o=s.map((e=>(0,f.Ts)(e,a)||e)),c={};for(const e of t){const t=e.attributes;if(null!=t&&(n(e,o),u))for(const e in t)e in c||(c[e]=!1),c[e]||null!=(l=t[e])&&""!==l&&(c[e]=!0)}let d=[];if(u&&(d=Object.keys(c).filter((e=>!c[e]&&!o.includes(e))),0<d.length))for(const e of t){null!=e.attributes&&n(e,d)}if((0,r.rJ)(e.features)){const t=e.features,s=[...o,...d];if(t.fields&&(t.fields=t.fields.filter((e=>!s.includes(e.name)))),t.fieldAliases){const e=t.fieldAliases;for(const t of s)delete e[t];t.fieldAliases=e}}return{feature:(e=t.slice(0))[0],features:e}}}u.action="gcx:wf:arcgis::RemoveFeatureSetFields",u.suite="gcx:wf:builtin"}}]);