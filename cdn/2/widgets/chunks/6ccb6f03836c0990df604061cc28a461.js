"use strict";(self.webpackChunkexb_client=self.webpackChunkexb_client||[]).push([[1469],{11469:(e,t,s)=>{s.r(t),s.d(t,{RemoveFeatureSetFields:()=>n});var i=s(18886),l=s(72103),f=s(46275);function r(e,t){const s=e.attributes;for(const e of t)delete s[e];e.attributes=s}class n{execute(e){const t=(0,f.ZZ)(i.U.exists("features",e.features)),s=i.U.array("fields",e.fields,[]);var n,a=i.U.boolean("removeEmptyFields",e.removeEmptyFields,!1);const o=0<t.length?t[0].attributes:{},c=s.map((e=>(0,l.Ts)(e,o)||e)),u={};for(const e of t){const t=e.attributes;if(null!=t&&(r(e,c),a))for(const e in t)e in u||(u[e]=!1),u[e]||null!=(n=t[e])&&""!==n&&(u[e]=!0)}let d=[];if(a&&(d=Object.keys(u).filter((e=>!u[e]&&!c.includes(e))),0<d.length))for(const e of t){null!=e.attributes&&r(e,d)}if((0,f.rJ)(e.features)){const t=e.features,s=[...c,...d];if(t.fields&&(t.fields=t.fields.filter((e=>!s.includes(e.name)))),t.fieldAliases){const e=t.fieldAliases;for(const t of s)delete e[t];t.fieldAliases=e}}return{feature:(e=t.slice(0))[0],features:e}}}n.action="gcx:wf:arcgis::RemoveFeatureSetFields",n.suite="gcx:wf:builtin"}}]);